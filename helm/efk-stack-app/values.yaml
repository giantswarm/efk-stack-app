global:
  registry: quay.io

  opendistro:
    es:
      client:
        uri: opendistro-es-client-service

opendistro-certs:
  enabled: true
  organization: Giant Swarm
  expiration: 5 years

elasticsearch-curator:
  enabled: true
  env:
    ELASTIC_CREDS: $(ELASTIC_USER):$(ELASTIC_PASS)
  envFromSecrets:
    ELASTIC_USER:
      from:
        secret: kibana-auth
        key: username
    ELASTIC_PASS:
      from:
        secret: kibana-auth
        key: password
  command: ["/usr/bin/curator"]
  image:
    registry: quay.io
    repository: giantswarm/bobrik-curator
    tag: 5.8.1@sha256:3aaf4d8aca9ec1d77fc46e99ba119abf4ad4d5ac42eb7e1227c420a8b6927259

  configMaps:
    # Delete indices older than 7 days
    action_file_yml: |-
      ---
      actions:
        1:
          action: delete_indices
          description: "Clean up ES by deleting old indices"
          options:
            timeout_override:
            continue_if_exception: False
            disable_action: False
            ignore_empty_list: True
          filters:
          - filtertype: age
            source: name
            direction: older
            timestring: '%Y.%m.%d'
            unit: days
            unit_count: 7
            field:
            stats_result:
            epoch:
            exclude: False
    # Having config_yaml WILL override the other config
    # Check workaround https://github.com/elastic/curator/issues/1440#issuecomment-522409936
    config_yml: |-
      ---
      client:
        hosts:
          - opendistro-es-client-service
        port: 9200
        http_auth: ${ELASTIC_CREDS}

elasticsearch-exporter:
  enabled: true
  image:
    registry: quay.io
    repository: giantswarm/elasticsearch_exporter
    tag: 1.1.0@sha256:0f94474f46a917d85657ee62ad6d01d30128198ed048014caf5471b9b7151b45
  service:
    annotations:
      giantswarm.io/monitoring: "true"
      giantswarm.io/monitoring-path: /metrics
      giantswarm.io/monitoring-port: "9108"
  envFromSecret: "kibana-auth"
  es:
    uri: http://$(username):$(password)@opendistro-es-client-service:9200

fluentd-elasticsearch:
  enabled: true
  configMaps:
    useDefaults:
      systemConf: true
      systemInputConf: false
  podSecurityPolicy:
    enabled: true
  image:
    registry: quay.io
    repository: giantswarm/fluentd
    tag: v3.0.0@sha256:2cc9334d646b14a002e71f0b0c34eca411e35f07c88f0bac9783805fb13c0190
  elasticsearch:
    host: opendistro-es-client-service
    logstashPrefix: "fluentd"
    sslVerify: false
    scheme: "http"
    auth:
      enabled: true
  env:
    LD_PRELOAD: /usr/lib/x86_64-linux-gnu/libjemalloc.so.2
  secret:
    - name: OUTPUT_USER
      secret_name: kibana-auth
      secret_key: username
    - name: OUTPUT_PASSWORD
      secret_name: kibana-auth
      secret_key: password

opendistro-es:
  enabled: true

  kibana:
    enabled: true
    # see https://quay.io/repository/giantswarm/opendistro-for-elasticsearch-kibana?tab=tags
    image: giantswarm/opendistro-for-elasticsearch-kibana
    imageTag: 1.12.0@sha256:ad07feadbf595048572908ca604aff7fa547a6c0c15e750f765a799b48bd5c3d
    imagePullPolicy: IfNotPresent

    config:
      server:
        name: kibana
        host: "0"

      elasticsearch:
        hosts: http://opendistro-es-client-service:9200
        requestTimeout: 360000
        username: ${ELASTICSEARCH_USERNAME}
        password: ${ELASTICSEARCH_PASSWORD}

      elasticsearch.requestHeadersWhitelist: ["securitytenant", "Authorization"]

      logging.verbose: false

      opendistro_security:
        cookie.secure: true
        cookie.password: ${COOKIE_PASS}
        # Multitenancy with global/private tenants disabled,
        # set to both to true if you want them to be available.
        multitenancy.enabled: false
        multitenancy.tenants.enable_private: false
        multitenancy.tenants.enable_global: false
        readonly_mode.roles: ["kibana_read_only"]

    elasticsearchAccount:
      secret: kibana-auth

  elasticsearch:
    # see https://quay.io/repository/giantswarm/opendistro-for-elasticsearch?tab=tags
    image: giantswarm/opendistro-for-elasticsearch
    imageTag: 1.12.0@sha256:1cbbcd721f356c2fb07d95648b89a278287cefeb0f663b9fd8fb0f9a4c89a63d
    imagePullPolicy: IfNotPresent

    sysctl:
      enabled: true

    initContainer:
      image: giantswarm/busybox
      imageTag: 1.32.0@sha256:400ee2ed939df769d4681023810d2e4fb9479b8401d97003c710d0e20f7c49c6

    ssl:
      transport:
        enabled: true
        existingCertSecret: opendistro-transport-certs

    master:
      replicas: 3

      persistence:
        size: 50Gi

      podDisruptionBudget:
        enabled: true
        minAvailable: null
        maxUnavailable: 1

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  role: master

    data:
      replicas: 3

      persistence:
        size: 100Gi
      
      podDisruptionBudget:
        enabled: true
        minAvailable: null
        maxUnavailable: 1

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  role: data

    client:
      replicas: 2

      ingress:
        enabled: false

      podDisruptionBudget:
        enabled: true
        minAvailable: null
        maxUnavailable: 1

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  role: client

    config:
      # Majority of options described here: https://github.com/opendistro-for-elasticsearch/security/blob/master/securityconfig/elasticsearch.yml.example
      opendistro_security:
        audit:
          ignore_users: ["admin"]
          # See: https://opendistro.github.io/for-elasticsearch-docs/docs/security-audit-logs/
          type: internal_elasticsearch

        allow_unsafe_democertificates: false
        # Set to false if running securityadmin.sh manually following deployment
        allow_default_init_securityindex: true
        # See: https://github.com/opendistro-for-elasticsearch/security/blob/master/securityconfig/elasticsearch.yml.example#L27
        roles_mapping_resolution: BOTH
        restapi.roles_enabled: ["all_access", "security_rest_api_access"]
        # See: https://github.com/opendistro-for-elasticsearch/security/blob/master/securityconfig/elasticsearch.yml.example#L17
        nodes_dn:
          - "*"
        ssl:
          transport:
            enforce_hostname_verification: false
            pemcert_filepath: elk-transport-crt.pem
            pemkey_filepath: elk-transport-key.pem
            pemtrustedcas_filepath: elk-transport-root-ca.pem

    # config:
    #   # Majority of options described here: https://github.com/opendistro-for-elasticsearch/security/blob/master/securityconfig/elasticsearch.yml.example
      
    #   opendistro_security.audit.ignore_users: ["admin"]
    #       # See: https://opendistro.github.io/for-elasticsearch-docs/docs/security-audit-logs/
    #   opendistro_security.audit.type: internal_elasticsearch

    #   opendistro_security:
    #     allow_unsafe_democertificates: false
    #     # Set to false if running securityadmin.sh manually following deployment
    #     allow_default_init_securityindex: true
    #     # See: https://github.com/opendistro-for-elasticsearch/security/blob/master/securityconfig/elasticsearch.yml.example#L27
    #     roles_mapping_resolution: BOTH
    #     restapi.roles_enabled: ["all_access", "security_rest_api_access"]
    #     # See: https://github.com/opendistro-for-elasticsearch/security/blob/master/securityconfig/elasticsearch.yml.example#L17
    #     nodes_dn:
    #       - "*"
    #     ssl:
    #       transport:
    #         enforce_hostname_verification: false
    #         pemcert_filepath: elk-transport-crt.pem
    #         pemkey_filepath: elk-transport-key.pem
    #         pemtrustedcas_filepath: elk-transport-root-ca.pem
